{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desarrollos\\\\EjercicioTokko\\\\ejercicio-tokko-app\\\\src\\\\components\\\\Brokers\\\\FormCreateBroker.js\";\nimport React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { Mutation } from \"react-apollo\";\nimport { useMutation } from '@apollo/react-hooks';\nimport { POSTS_QUERY } from \"../../services/createBroker\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Button from \"@material-ui/core/Button\";\n/*const addNewBroker = (brokerInput) => <Mutation mutation={POSTS_QUERY(brokerInput)}>\r\n    {({loading, error, data}) => {\r\n        if (loading) return <CircularProgress></CircularProgress>;\r\n        if (error) return <p>Error...!</p>;\r\n\r\n        return console.log(data);\r\n    }}\r\n</Mutation>;*/\n\n/*class FormCreateBroker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { value: false };\r\n    };\r\n\r\n    save() {\r\n        const { value } = this.state;\r\n\r\n        // ... do logic\r\n    };\r\n\r\n    handleChange = (value) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form>\r\n                <TextField id=\"some-unique-id\" label=\"Some label\" placeholder=\"Type text here...\" value={this.state.value()} onChange={this.handleChange}/>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormCreateBroker;*/\n\nconst FormCreateBroker = () => {\n  let input;\n  const [createBroker, {\n    data\n  }] = useMutation(POSTS_QUERY);\n  const [myValue, setValue] = useState('');\n  /*    const brokerInput = {\r\n          \"brokerInput\": {\r\n              \"name\": \"Barcelona F.C.\",\r\n              \"address\": \"Barcelona F.C.\"\r\n          }\r\n      };*/\n\n  return React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Ajax FC\");\n};\n\nexport default FormCreateBroker;\n/*\r\n* <form noValidate autoComplete=\"off\">\r\n        <div>\r\n            <TextField required id=\"broker-name\" label=\"Required\" placeholder=\"Name of the Broker\" value={myValue}\r\n                       onChange={(e) => setValue(e.target.value)}/>\r\n            <TextField id=\"broker-address\" placeholder=\"Address of the Broker\"/>\r\n        </div>\r\n        <Button type=\"submit\">Confirm</Button>\r\n    </form>\r\n* */","map":{"version":3,"sources":["C:/Desarrollos/EjercicioTokko/ejercicio-tokko-app/src/components/Brokers/FormCreateBroker.js"],"names":["React","useState","TextField","Mutation","useMutation","POSTS_QUERY","CircularProgress","Button","FormCreateBroker","input","createBroker","data","myValue","setValue"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAAQC,WAAR,QAA0B,6BAA1B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAGA;;;;;;;;;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,MAAMC,gBAAgB,GAAG,MAAM;AAC3B,MAAIC,KAAJ;AACA,QAAM,CAACC,YAAD,EAAe;AAAEC,IAAAA;AAAF,GAAf,IAA2BP,WAAW,CAACC,WAAD,CAA5C;AAEA,QAAM,CAACO,OAAD,EAAUC,QAAV,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AAEJ;;;;;;;AAOI,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AAGH,CAhBD;;AAkBA,eAAeO,gBAAf;AAGA","sourcesContent":["import React, {useState} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Mutation } from \"react-apollo\";\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport {POSTS_QUERY} from \"../../services/createBroker\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\n/*const addNewBroker = (brokerInput) => <Mutation mutation={POSTS_QUERY(brokerInput)}>\r\n    {({loading, error, data}) => {\r\n        if (loading) return <CircularProgress></CircularProgress>;\r\n        if (error) return <p>Error...!</p>;\r\n\r\n        return console.log(data);\r\n    }}\r\n</Mutation>;*/\r\n\r\n\r\n/*class FormCreateBroker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { value: false };\r\n    };\r\n\r\n    save() {\r\n        const { value } = this.state;\r\n\r\n        // ... do logic\r\n    };\r\n\r\n    handleChange = (value) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form>\r\n                <TextField id=\"some-unique-id\" label=\"Some label\" placeholder=\"Type text here...\" value={this.state.value()} onChange={this.handleChange}/>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormCreateBroker;*/\r\n\r\n\r\nconst FormCreateBroker = () => {\r\n    let input;\r\n    const [createBroker, { data }] = useMutation(POSTS_QUERY);\r\n\r\n    const [myValue, setValue] = useState('');\r\n\r\n/*    const brokerInput = {\r\n        \"brokerInput\": {\r\n            \"name\": \"Barcelona F.C.\",\r\n            \"address\": \"Barcelona F.C.\"\r\n        }\r\n    };*/\r\n\r\n    return <form>\r\n        Ajax FC\r\n    </form>;\r\n};\r\n\r\nexport default FormCreateBroker;\r\n\r\n\r\n/*\r\n* <form noValidate autoComplete=\"off\">\r\n        <div>\r\n            <TextField required id=\"broker-name\" label=\"Required\" placeholder=\"Name of the Broker\" value={myValue}\r\n                       onChange={(e) => setValue(e.target.value)}/>\r\n            <TextField id=\"broker-address\" placeholder=\"Address of the Broker\"/>\r\n        </div>\r\n        <Button type=\"submit\">Confirm</Button>\r\n    </form>\r\n* */"]},"metadata":{},"sourceType":"module"}