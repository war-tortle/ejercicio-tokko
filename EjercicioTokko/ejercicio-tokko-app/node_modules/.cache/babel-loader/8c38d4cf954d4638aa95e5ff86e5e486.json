{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desarrollos\\\\EjercicioTokko\\\\ejercicio-tokko-app\\\\src\\\\components\\\\Brokers\\\\FormCreateBroker.js\";\nimport React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { Mutation } from \"react-apollo\";\nimport { useMutation } from '@apollo/react-hooks';\nimport { POSTS_QUERY } from \"../../services/createBroker\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Button from \"@material-ui/core/Button\";\n/*const addNewBroker = (brokerInput) => <Mutation mutation={POSTS_QUERY(brokerInput)}>\r\n    {({loading, error, data}) => {\r\n        if (loading) return <CircularProgress></CircularProgress>;\r\n        if (error) return <p>Error...!</p>;\r\n\r\n        return console.log(data);\r\n    }}\r\n</Mutation>;*/\n\nclass FormCreateBroker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      broker: {\n        name: '',\n        address: ''\n      }\n    };\n    this.state = {\n      value: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmmit: e => {\n        e.preventDefault();\n        const {\n          Name,\n          Address\n        } = this.state.broker;\n        const input = {\n          Name,\n          Address\n        };\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\",\n      onChange: e => {\n        this.setState({\n          broker: { ...this.state.broker,\n            name: e.target.value\n          }\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Address\",\n      onChange: e => {\n        this.setState({\n          broker: { ...this.state.broker,\n            address: e.target.value\n          }\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default FormCreateBroker;\n/*const FormCreateBroker = () => {\r\n    let input;\r\n    const [createBroker, { data }] = useMutation(POSTS_QUERY);\r\n\r\n    const [myValue, setValue] = useState('');\r\n\r\n    return <form>\r\n\r\n    </form>;\r\n};\r\n\r\nexport default FormCreateBroker;*/\n\n/*\r\n* <form noValidate autoComplete=\"off\">\r\n        <div>\r\n            <TextField required id=\"broker-name\" label=\"Required\" placeholder=\"Name of the Broker\" value={myValue}\r\n                       onChange={(e) => setValue(e.target.value)}/>\r\n            <TextField id=\"broker-address\" placeholder=\"Address of the Broker\"/>\r\n        </div>\r\n        <Button type=\"submit\">Confirm</Button>\r\n    </form>\r\n* */\n//const createBroker = useMutation(POSTS_QUERY);\n\n/*class FormCreateBroker extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    };\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const createBroker = {};\r\n        for (const field in this.refs) {\r\n            createBroker[field] = this.refs[field].value;\r\n        }\r\n        console.log('-->', createBroker);\r\n        return createBroker;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Mutation mutation={POSTS_QUERY}>\r\n                {(changeAvailability, {data}) => (\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div>\r\n                            <input ref=\"name\" className=\"name\" name=\"name\"/>\r\n                            <input ref=\"address\" className=\"address\" name=\"address\"/>\r\n                            <input type=\"submit\" value=\"Submit\"/>\r\n                            <button onClick = {(e) => {\r\n                                    e.preventDefault();\r\n                                    changeAvailability({\r\n                                        variables: {brokerInput: this.handleSubmit}\r\n                                    })\r\n                                }\r\n                            }>\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                )}\r\n            </Mutation>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormCreateBroker;*/","map":{"version":3,"sources":["C:/Desarrollos/EjercicioTokko/ejercicio-tokko-app/src/components/Brokers/FormCreateBroker.js"],"names":["React","Component","TextField","Mutation","useMutation","POSTS_QUERY","CircularProgress","Button","FormCreateBroker","constructor","props","state","broker","name","address","value","render","e","preventDefault","Name","Address","input","setState","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAAQC,WAAR,QAA0B,6BAA1B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAGA;;;;;;;;;AASA,MAAMC,gBAAN,SAA+BR,KAAK,CAACC,SAArC,CAA+C;AAC3CQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAKnBC,KALmB,GAKX;AACJC,MAAAA,MAAM,EAAE;AACJC,QAAAA,IAAI,EAAE,EADF;AAEJC,QAAAA,OAAO,EAAE;AAFL;AADJ,KALW;AAEf,SAAKH,KAAL,GAAa;AAAEI,MAAAA,KAAK,EAAE;AAAT,KAAb;AACH;;AAUDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAM,MAAA,SAAS,EAAGC,CAAC,IAAI;AACfA,QAAAA,CAAC,CAACC,cAAF;AAEA,cAAM;AAACC,UAAAA,IAAD;AAAOC,UAAAA;AAAP,YAAkB,KAAKT,KAAL,CAAWC,MAAnC;AACA,cAAMS,KAAK,GAAG;AACVF,UAAAA,IADU;AAEVC,UAAAA;AAFU,SAAd;AAIH,OARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,MAA/B;AAAsC,MAAA,QAAQ,EAAEH,CAAC,IAAI;AACjD,aAAKK,QAAL,CAAc;AACVV,UAAAA,MAAM,EAAE,EACJ,GAAG,KAAKD,KAAL,CAAWC,MADV;AAEJC,YAAAA,IAAI,EAACI,CAAC,CAACM,MAAF,CAASR;AAFV;AADE,SAAd;AAKG,OANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,EAkBI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,SAA/B;AAAyC,MAAA,QAAQ,EAAEE,CAAC,IAAI;AACpD,aAAKK,QAAL,CAAc;AACVV,UAAAA,MAAM,EAAE,EACJ,GAAG,KAAKD,KAAL,CAAWC,MADV;AAEJE,YAAAA,OAAO,EAACG,CAAC,CAACM,MAAF,CAASR;AAFb;AADE,SAAd;AAKG,OANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBJ,CADJ;AA6BH;;AA5C0C;;AA+C/C,eAAeP,gBAAf;AAEA;;;;;;;;;;;;;AAaA;;;;;;;;;;AAWA;;AAEA","sourcesContent":["import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Mutation } from \"react-apollo\";\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport {POSTS_QUERY} from \"../../services/createBroker\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\n/*const addNewBroker = (brokerInput) => <Mutation mutation={POSTS_QUERY(brokerInput)}>\r\n    {({loading, error, data}) => {\r\n        if (loading) return <CircularProgress></CircularProgress>;\r\n        if (error) return <p>Error...!</p>;\r\n\r\n        return console.log(data);\r\n    }}\r\n</Mutation>;*/\r\n\r\nclass FormCreateBroker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { value: ''};\r\n    };\r\n\r\n    state = {\r\n        broker: {\r\n            name: '',\r\n            address: ''\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmmit={ e => {\r\n                    e.preventDefault();\r\n\r\n                    const {Name, Address} = this.state.broker;\r\n                    const input = {\r\n                        Name,\r\n                        Address\r\n                    }\r\n                }\r\n            }>\r\n                <input type='text' placeholder='Name' onChange={e => {\r\n                    this.setState({\r\n                        broker: {\r\n                            ...this.state.broker,\r\n                            name:e.target.value\r\n                        }\r\n                    })}\r\n                }/>\r\n                <input type='text' placeholder='Address' onChange={e => {\r\n                    this.setState({\r\n                        broker: {\r\n                            ...this.state.broker,\r\n                            address:e.target.value\r\n                        }\r\n                    })}\r\n                }/>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormCreateBroker;\r\n\r\n/*const FormCreateBroker = () => {\r\n    let input;\r\n    const [createBroker, { data }] = useMutation(POSTS_QUERY);\r\n\r\n    const [myValue, setValue] = useState('');\r\n\r\n    return <form>\r\n\r\n    </form>;\r\n};\r\n\r\nexport default FormCreateBroker;*/\r\n\r\n/*\r\n* <form noValidate autoComplete=\"off\">\r\n        <div>\r\n            <TextField required id=\"broker-name\" label=\"Required\" placeholder=\"Name of the Broker\" value={myValue}\r\n                       onChange={(e) => setValue(e.target.value)}/>\r\n            <TextField id=\"broker-address\" placeholder=\"Address of the Broker\"/>\r\n        </div>\r\n        <Button type=\"submit\">Confirm</Button>\r\n    </form>\r\n* */\r\n\r\n//const createBroker = useMutation(POSTS_QUERY);\r\n\r\n/*class FormCreateBroker extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    };\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const createBroker = {};\r\n        for (const field in this.refs) {\r\n            createBroker[field] = this.refs[field].value;\r\n        }\r\n        console.log('-->', createBroker);\r\n        return createBroker;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Mutation mutation={POSTS_QUERY}>\r\n                {(changeAvailability, {data}) => (\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div>\r\n                            <input ref=\"name\" className=\"name\" name=\"name\"/>\r\n                            <input ref=\"address\" className=\"address\" name=\"address\"/>\r\n                            <input type=\"submit\" value=\"Submit\"/>\r\n                            <button onClick = {(e) => {\r\n                                    e.preventDefault();\r\n                                    changeAvailability({\r\n                                        variables: {brokerInput: this.handleSubmit}\r\n                                    })\r\n                                }\r\n                            }>\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                )}\r\n            </Mutation>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormCreateBroker;*/"]},"metadata":{},"sourceType":"module"}