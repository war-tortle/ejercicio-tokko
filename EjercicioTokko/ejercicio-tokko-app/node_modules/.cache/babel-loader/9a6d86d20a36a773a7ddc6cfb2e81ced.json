{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desarrollos\\\\EjercicioTokko\\\\ejercicio-tokko-app\\\\src\\\\components\\\\Brokers\\\\FormCreateBroker.js\";\nimport React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { Mutation } from \"react-apollo\";\nimport { POSTS_QUERY } from \"../../services/createBroker\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Button from \"@material-ui/core/Button\";\n\nconst addNewBroker = brokerInput => React.createElement(Mutation, {\n  mutation: POSTS_QUERY(brokerInput),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, ({\n  loading,\n  error,\n  data\n}) => {\n  if (loading) return React.createElement(CircularProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  });\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Error...!\");\n  return console.log(data);\n});\n/*class FormCreateBroker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { value: false };\r\n    };\r\n\r\n    save() {\r\n        const { value } = this.state;\r\n\r\n        // ... do logic\r\n    };\r\n\r\n    handleChange = (value) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form>\r\n                <TextField id=\"some-unique-id\" label=\"Some label\" placeholder=\"Type text here...\" value={this.state.value()} onChange={this.handleChange}/>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormCreateBroker;*/\n\n\nconst FormCreateBroker = () => {\n  const [myValue, setValue] = useState('');\n  const brokerInput = {\n    \"brokerInput\": {\n      \"name\": \"Barcelona F.C.\",\n      \"address\": \"Barcelona F.C.\"\n    }\n  };\n  return React.createElement(\"form\", {\n    noValidate: true,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    required: true,\n    id: \"broker-name\",\n    label: \"Required\",\n    placeholder: \"Name of the Broker\",\n    value: myValue,\n    onChange: e => setValue(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"broker-address\",\n    placeholder: \"Address of the Broker\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(Button, {\n    onClick: addNewBroker({\n      brokerInput\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Confirm\"));\n};\n\nexport default FormCreateBroker;","map":{"version":3,"sources":["C:/Desarrollos/EjercicioTokko/ejercicio-tokko-app/src/components/Brokers/FormCreateBroker.js"],"names":["React","useState","TextField","Mutation","POSTS_QUERY","CircularProgress","Button","addNewBroker","brokerInput","loading","error","data","console","log","FormCreateBroker","myValue","setValue","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAAQC,WAAR,QAA0B,6BAA1B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,YAAY,GAAIC,WAAD,IAAiB,oBAAC,QAAD;AAAU,EAAA,QAAQ,EAAEJ,WAAW,CAACI,WAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACjC,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,KAAV;AAAiBC,EAAAA;AAAjB,CAAD,KAA4B;AACzB,MAAIF,OAAJ,EAAa,OAAO,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AAEX,SAAOE,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAP;AACH,CANiC,CAAtC;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,MAAMG,gBAAgB,GAAG,MAAM;AAC3B,QAAM,CAACC,OAAD,EAAUC,QAAV,IAAsBf,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMO,WAAW,GAAG;AAChB,mBAAe;AACX,cAAQ,gBADG;AAEX,iBAAW;AAFA;AADC,GAApB;AAOA,SAAO;AAAM,IAAA,UAAU,MAAhB;AAAiB,IAAA,YAAY,EAAC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,QAAQ,MAAnB;AAAoB,IAAA,EAAE,EAAC,aAAvB;AAAqC,IAAA,KAAK,EAAC,UAA3C;AAAsD,IAAA,WAAW,EAAC,oBAAlE;AAAuF,IAAA,KAAK,EAAEO,OAA9F;AACW,IAAA,QAAQ,EAAGE,CAAD,IAAOD,QAAQ,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CADpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGI,oBAAC,SAAD;AAAW,IAAA,EAAE,EAAC,gBAAd;AAA+B,IAAA,WAAW,EAAC,uBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADG,EAMH,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEZ,YAAY,CAAC;AAACC,MAAAA;AAAD,KAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANG,CAAP;AAQH,CAlBD;;AAoBA,eAAeM,gBAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Mutation } from \"react-apollo\";\r\nimport {POSTS_QUERY} from \"../../services/createBroker\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst addNewBroker = (brokerInput) => <Mutation mutation={POSTS_QUERY(brokerInput)}>\r\n    {({loading, error, data}) => {\r\n        if (loading) return <CircularProgress></CircularProgress>;\r\n        if (error) return <p>Error...!</p>;\r\n\r\n        return console.log(data);\r\n    }}\r\n</Mutation>;\r\n\r\n\r\n/*class FormCreateBroker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { value: false };\r\n    };\r\n\r\n    save() {\r\n        const { value } = this.state;\r\n\r\n        // ... do logic\r\n    };\r\n\r\n    handleChange = (value) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form>\r\n                <TextField id=\"some-unique-id\" label=\"Some label\" placeholder=\"Type text here...\" value={this.state.value()} onChange={this.handleChange}/>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormCreateBroker;*/\r\n\r\n\r\n\r\nconst FormCreateBroker = () => {\r\n    const [myValue, setValue] = useState('');\r\n\r\n    const brokerInput = {\r\n        \"brokerInput\": {\r\n            \"name\": \"Barcelona F.C.\",\r\n            \"address\": \"Barcelona F.C.\"\r\n        }\r\n    };\r\n\r\n    return <form noValidate autoComplete=\"off\">\r\n        <div>\r\n            <TextField required id=\"broker-name\" label=\"Required\" placeholder=\"Name of the Broker\" value={myValue}\r\n                       onChange={(e) => setValue(e.target.value)}/>\r\n            <TextField id=\"broker-address\" placeholder=\"Address of the Broker\"/>\r\n        </div>\r\n        <Button onClick={addNewBroker({brokerInput})}>Confirm</Button>\r\n    </form>;\r\n};\r\n\r\nexport default FormCreateBroker;"]},"metadata":{},"sourceType":"module"}