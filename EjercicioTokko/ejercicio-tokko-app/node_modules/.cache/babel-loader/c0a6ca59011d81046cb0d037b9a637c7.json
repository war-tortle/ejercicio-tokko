{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desarrollos\\\\EjercicioTokko\\\\ejercicio-tokko-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport { Query } from 'react-apollo';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport './App.css';\nconst POSTS_QUERY = gql`\n    {\n        brokers {\n            id\n            name\n            address\n        }\n    }\n`;\n\nfunction ExchangeRates() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(EXCHANGE_RATES);\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Error...!\");\n  return data.brokers.map(broker => {\n    return React.createElement(\"p\", {\n      key: broker.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, broker.name);\n  });\n}\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Query, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Desarrollos/EjercicioTokko/ejercicio-tokko-app/src/App.js"],"names":["React","Query","useQuery","gql","POSTS_QUERY","ExchangeRates","loading","error","data","EXCHANGE_RATES","brokers","map","broker","id","name","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAO,WAAP;AAEA,MAAMC,WAAW,GAAGD,GAAI;;;;;;;;CAAxB;;AAYA,SAASE,aAAT,GAAyB;AACjB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAACO,cAAD,CAAzC;AAEA,MAAIH,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AAEX,SAAOC,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAiBC,MAAM,IAAI;AAC9B,WAAO;AAAG,MAAA,GAAG,EAAEA,MAAM,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBD,MAAM,CAACE,IAA3B,CAAP;AACH,GAFM,CAAP;AAGP;;AAED,SAASC,GAAT,GAAe;AACb,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADF;AAKD;;AAED,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport { Query } from 'react-apollo'\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport './App.css';\n\nconst POSTS_QUERY = gql`\n    {\n        brokers {\n            id\n            name\n            address\n        }\n    }\n`;\n\n\n\nfunction ExchangeRates() {\n        const { loading, error, data } = useQuery(EXCHANGE_RATES);\n\n        if (loading) return <p>Loading...</p>;\n        if (error) return <p>Error...!</p>;\n\n        return data.brokers.map(broker => {\n            return <p key={broker.id}>{broker.name}</p>\n        })\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Query></Query>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}