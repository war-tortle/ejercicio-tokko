{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desarrollos\\\\EjercicioTokko\\\\ejercicio-tokko-app\\\\src\\\\components\\\\Brokers\\\\FormCreateBroker.js\";\nimport React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { Mutation } from \"react-apollo\";\nimport { useMutation } from '@apollo/react-hooks';\nimport { POSTS_QUERY } from \"../../services/createBroker\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Button from \"@material-ui/core/Button\";\n/*const addNewBroker = (brokerInput) => <Mutation mutation={POSTS_QUERY(brokerInput)}>\r\n    {({loading, error, data}) => {\r\n        if (loading) return <CircularProgress></CircularProgress>;\r\n        if (error) return <p>Error...!</p>;\r\n\r\n        return console.log(data);\r\n    }}\r\n</Mutation>;*/\n\n/*class FormCreateBroker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { value: false };\r\n    };\r\n\r\n    save() {\r\n        const { value } = this.state;\r\n\r\n        // ... do logic\r\n    };\r\n\r\n    handleChange = (value) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form>\r\n                <TextField id=\"some-unique-id\" label=\"Some label\" placeholder=\"Type text here...\" value={this.state.value()} onChange={this.handleChange}/>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormCreateBroker;*/\n\n/*const FormCreateBroker = () => {\r\n    let input;\r\n    const [createBroker, { data }] = useMutation(POSTS_QUERY);\r\n\r\n    const [myValue, setValue] = useState('');\r\n\r\n    return <form>\r\n\r\n    </form>;\r\n};\r\n\r\nexport default FormCreateBroker;*/\n\n/*\r\n* <form noValidate autoComplete=\"off\">\r\n        <div>\r\n            <TextField required id=\"broker-name\" label=\"Required\" placeholder=\"Name of the Broker\" value={myValue}\r\n                       onChange={(e) => setValue(e.target.value)}/>\r\n            <TextField id=\"broker-address\" placeholder=\"Address of the Broker\"/>\r\n        </div>\r\n        <Button type=\"submit\">Confirm</Button>\r\n    </form>\r\n* */\n//const createBroker = useMutation(POSTS_QUERY);\n\nclass FormCreateBroker extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const createBroker = {};\n\n    for (const field in this.refs) {\n      createBroker[field] = this.refs[field].value;\n    }\n\n    console.log('-->', createBroker);\n    return createBroker;\n  }\n\n  render() {\n    return React.createElement(Mutation, {\n      mutation: POSTS_QUERY,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, (changeAvailability, {\n      data\n    }) => React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: \"name\",\n      className: \"name\",\n      name: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      ref: \"address\",\n      className: \"address\",\n      name: \"address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: e => {\n        e.preventDefault();\n        changeAvailability({\n          brokerInput: this.handleSubmit\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default FormCreateBroker;","map":{"version":3,"sources":["C:/Desarrollos/EjercicioTokko/ejercicio-tokko-app/src/components/Brokers/FormCreateBroker.js"],"names":["React","Component","TextField","Mutation","useMutation","POSTS_QUERY","CircularProgress","Button","FormCreateBroker","constructor","props","handleSubmit","bind","e","preventDefault","createBroker","field","refs","value","console","log","render","changeAvailability","data","brokerInput"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAAQC,WAAR,QAA0B,6BAA1B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAGA;;;;;;;;;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;;;;;;;;;;;;;AAaA;;;;;;;;;;AAWA;;AAEA,MAAMC,gBAAN,SAA+BP,SAA/B,CAAyC;AAErCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACE,CAAD,EAAI;AACZA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,YAAY,GAAG,EAArB;;AACA,SAAK,MAAMC,KAAX,IAAoB,KAAKC,IAAzB,EAA+B;AAC3BF,MAAAA,YAAY,CAACC,KAAD,CAAZ,GAAsB,KAAKC,IAAL,CAAUD,KAAV,EAAiBE,KAAvC;AACH;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBL,YAAnB;AACA,WAAOA,YAAP;AACH;;AAEDM,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAEhB,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAACiB,kBAAD,EAAqB;AAACC,MAAAA;AAAD,KAArB,KACG;AAAM,MAAA,QAAQ,EAAE,KAAKZ,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,GAAG,EAAC,MAAX;AAAkB,MAAA,SAAS,EAAC,MAA5B;AAAmC,MAAA,IAAI,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,GAAG,EAAC,SAAX;AAAqB,MAAA,SAAS,EAAC,SAA/B;AAAyC,MAAA,IAAI,EAAC,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII;AAAQ,MAAA,OAAO,EAAKE,CAAD,IAAO;AAClBA,QAAAA,CAAC,CAACC,cAAF;AACAQ,QAAAA,kBAAkB,CAAC;AACfE,UAAAA,WAAW,EAAE,KAAKb;AADH,SAAD,CAAlB;AAGH,OALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ,CAFR,CADJ;AAqBH;;AAxCoC;;AA2CzC,eAAeH,gBAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Mutation } from \"react-apollo\";\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport {POSTS_QUERY} from \"../../services/createBroker\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\n/*const addNewBroker = (brokerInput) => <Mutation mutation={POSTS_QUERY(brokerInput)}>\r\n    {({loading, error, data}) => {\r\n        if (loading) return <CircularProgress></CircularProgress>;\r\n        if (error) return <p>Error...!</p>;\r\n\r\n        return console.log(data);\r\n    }}\r\n</Mutation>;*/\r\n\r\n/*class FormCreateBroker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { value: false };\r\n    };\r\n\r\n    save() {\r\n        const { value } = this.state;\r\n\r\n        // ... do logic\r\n    };\r\n\r\n    handleChange = (value) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form>\r\n                <TextField id=\"some-unique-id\" label=\"Some label\" placeholder=\"Type text here...\" value={this.state.value()} onChange={this.handleChange}/>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormCreateBroker;*/\r\n\r\n/*const FormCreateBroker = () => {\r\n    let input;\r\n    const [createBroker, { data }] = useMutation(POSTS_QUERY);\r\n\r\n    const [myValue, setValue] = useState('');\r\n\r\n    return <form>\r\n\r\n    </form>;\r\n};\r\n\r\nexport default FormCreateBroker;*/\r\n\r\n/*\r\n* <form noValidate autoComplete=\"off\">\r\n        <div>\r\n            <TextField required id=\"broker-name\" label=\"Required\" placeholder=\"Name of the Broker\" value={myValue}\r\n                       onChange={(e) => setValue(e.target.value)}/>\r\n            <TextField id=\"broker-address\" placeholder=\"Address of the Broker\"/>\r\n        </div>\r\n        <Button type=\"submit\">Confirm</Button>\r\n    </form>\r\n* */\r\n\r\n//const createBroker = useMutation(POSTS_QUERY);\r\n\r\nclass FormCreateBroker extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    };\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const createBroker = {};\r\n        for (const field in this.refs) {\r\n            createBroker[field] = this.refs[field].value;\r\n        }\r\n        console.log('-->', createBroker);\r\n        return createBroker;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Mutation mutation={POSTS_QUERY}>\r\n                {(changeAvailability, {data}) => (\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div>\r\n                            <input ref=\"name\" className=\"name\" name=\"name\"/>\r\n                            <input ref=\"address\" className=\"address\" name=\"address\"/>\r\n                            <input type=\"submit\" value=\"Submit\"/>\r\n                            <button onClick = {(e) => {\r\n                                    e.preventDefault();\r\n                                    changeAvailability({\r\n                                        brokerInput: this.handleSubmit\r\n                                    })\r\n                                }\r\n                            }>\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                )}\r\n            </Mutation>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormCreateBroker;"]},"metadata":{},"sourceType":"module"}